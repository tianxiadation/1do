package com.demo.service;


import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.demo.common.model.Approval;
import com.demo.common.model.T1doBase;
import com.demo.common.model.T1doFw;
import com.demo.common.model.T1doPstatus;
import com.demo.common.model.TRegUser;
import com.demo.util.HttpUtil;
import com.demo.util.StrUtil;
import com.demo.util.TimeUtil;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

public class DoService {
	//private static String zhxxpt="https://zh.hzxc.gov.cn/";
	private static String zhxxpt="http://172.16.8.137/apphub-webui/";
	//
	/*
	 2019年3月5日 coco 注解：1do代办推送接口
	*/
	public static String dbts(String showid) {
		List<TRegUser> tp=TRegUser.dao.find("select b.U_LOGIN_NAME,b.U_MAIL from t_1do_pstatus a,t_reg_user b where"
				+ "a.o_user=b.show_id and a.show_id=? and a.user_type!=2 and isdelete=1 and issend=2 "
				+ "group by a.show_id");
		tp.forEach(t->{
			List<Record> list=Db.find("select * from (SELECT b.SHOW_ID showId,a.otherid isMain,a.isSend urgeIsLook,b.O_DESCRIBE title,b.LIGHTNING lightning,b.O_CREATE_TIME createTime,b.O_FINISH_TIME finishTime,b.URGENAME ouserName FROM t_1do_pstatus a,t_1do_base b,t_reg_user c"
					+" where a.O_USER=c.SHOW_ID and a.SHOW_ID=b.SHOW_ID and a.isDelete=1 and (a.isSend=2 or a.otherid=1) and a.USER_TYPE!=2 and b.O_STATUS<5"
					+" and  (c.U_MAIL=? or U_LOGIN_NAME=?) ORDER BY otherid desc)d  GROUP BY showId",t.getULoginName(),t.getUMail());							
			try {
				HttpUtil.doPost(zhxxpt+"3th/1do/dolist", getJson(t.getULoginName()==null?t.getUMail():t.getULoginName(), list));
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		});
		return "";
	}
	/*
	 2019年3月5日 coco 注解：1do催办推送接口
	 */
	public static String cbts(String showid) {
		List<TRegUser> tp=TRegUser.dao.find("select b.U_LOGIN_NAME,b.U_MAIL from t_1do_pstatus a,t_reg_user b where"
				+ "a.o_user=b.show_id and a.show_id=? and a.user_type!=2 and isdelete=1 and issend=2 "
				+ "group by a.show_id");
		tp.forEach(t->{
			List<Record> list=Db.find("select * from (SELECT b.SHOW_ID showId,a.otherid isMain,a.isSend urgeIsLook,b.O_DESCRIBE title,b.LIGHTNING lightning,b.O_CREATE_TIME createTime,b.O_FINISH_TIME finishTime,b.URGENAME ouserName FROM t_1do_pstatus a,t_1do_base b,t_reg_user c"
					+" where a.O_USER=c.SHOW_ID and a.SHOW_ID=b.SHOW_ID and a.isDelete=1 and (a.isSend=2 or a.otherid=1) and a.USER_TYPE!=2 and b.O_STATUS<5 AND b.LIGHTNING >0"
					+" and  (c.U_MAIL=? or U_LOGIN_NAME=?) ORDER BY otherid desc)d  GROUP BY showId",t.getULoginName(),t.getUMail());							
			try {
				HttpUtil.doPost(zhxxpt+"3th/1do/urgedlist", getJson(t.getULoginName()==null?t.getUMail():t.getULoginName(), list));
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		});
		return "";
	}
	/*
	 2019年3月5日 coco 注解：
	*/
	public static JSONObject getJson(String userName,List<Record> list) {
		JSONObject json=new JSONObject();
		json.put("appName", "1do");
		json.put("appKey", "1do");
		json.put("userName", userName);
		json.put("pageNo", 1);
		json.put("listCount", list.size());
		json.put("data", list);		
		return json;
	}
	private static String url="http://172.16.8.7:6002/Base-Module/Message";//测试环境通知接口
	//private static String url="http://xcgovapi.hzxc.gov.cn/Base-Module/Message";//正式环境通知接口
	public static List<Record> exportExcel(int type){
		String shi="否";
		//String temp=type==6?" and a.O_IS_DELETED=2 ":"";
		if(type==5||type==6){
			shi="是";
			//type=5;
		}
		
		/*String sql = "SELECT a.O_DESCRIBE,a.O_CREATE_TIME,a.O_FINISH_TIME,"
				+ "a.Real_FINISH_TIME,a.O_CUSTOMER_NAME,a.O_EXECUTOR_NAME,'"+shi+"' FINISH FROM t_1do_base a,"
				+ "t_1do_status b where a.SHOW_ID=b.SHOW_ID and b.O_STATUS=?"+temp; */
		String sql = "SELECT O_DESCRIBE,O_CREATE_TIME,O_FINISH_TIME,"
				+ "Real_FINISH_TIME,O_CUSTOMER_NAME,O_EXECUTOR_NAME,'"+shi+"' FINISH FROM t_1do_base where O_STATUS=?"; 
		return Db.find(sql,type);
	}
	/*
	 2018年7月9日上午10:52:04 coco   群发送通知
	*/
	public static String sendIdo(T1doBase t1doBase,int i,String O_USER){
		//T1doType t1doType=t1doBase.getT1doType();
		String[] str=StrUtil.getSql(i,O_USER,t1doBase.getOStatus());
		List<T1doPstatus> t1=T1doPstatus.dao.find(str[1],t1doBase.getShowId());
		String result = null;
		//int[] base=t1doBase.num();//0催办数1查看数2反馈数
		JSONObject object = new JSONObject();
		//object.put("O_TITLE", "1do");
		object.put("SHOW_ID", t1doBase.getShowId());
		object.put("O_DESCRIBE", t1doBase.getODescribe());
		object.put("O_CUSTOMER_NAME", t1doBase.getOCustomerName());
		object.put("O_CUSTOMER", t1doBase.getOCustomer());
		object.put("O_EXECUTOR", t1doBase.getOExecutor());
		object.put("O_EXECUTOR_NAME", t1doBase.getOExecutorName());
		object.put("AT", t1doBase.getAT());
		object.put("SEND_TIME", t1doBase.getSendTime());
		object.put("O_STATUS", str[0]);
		//object.put("LOOKNUM", base[1]);//查看数量
		//object.put("FBNUM", base[2]);//反馈数量	
		//object.put("LIGHTNING", base[0]);
		object.put("LOOKNUM", t1doBase.getLOOKNUM());//查看数量
		object.put("FBNUM", t1doBase.getFBNUM());//反馈数量	
		object.put("LIGHTNING", t1doBase.getLIGHTNING());
		//object.put("evaluation", i==6?"1":"2");//是否评价1评价2不评价
		object.put("O_CREATE_TIME",t1doBase.getOCreateTime());
		object.put("O_FINISH_TIME",t1doBase.getOFinishTime()==null?"":t1doBase.getOFinishTime());
		//T1doFeedback t=T1doFeedback.getT1doFeedback(5, t1doBase.getShowId());
		//object.put("Real_FINISH_TIME",t==null?"":t.getFbTime());
		object.put("Real_FINISH_TIME",t1doBase.getRealFinishTime()==null?"":t1doBase.getRealFinishTime());
		object.put("DELETE_TIME",t1doBase.getDeleteTime()==null?"":t1doBase.getDeleteTime());
		
		for(T1doPstatus tt:t1){
			String loginName=tt.getOUser();
			String trueName=tt.getOUserName();
			String att="select count(*) num from t_1do_base b, (select * from t_1do_pstatus where USER_TYPE!=2 and isDelete=1 and isSend=2 and O_USER='"+loginName+"' GROUP BY SHOW_ID)f where "
					+ "b.SHOW_ID=f.SHOW_ID and (O_EXECUTOR like CONCAT('%','"+loginName+"','%') or O_CUSTOMER like CONCAT('%','"+loginName+"','%') ) ";
			Record r2=Db.findFirst(att);
			object.put("UNREAD", r2.getInt("num"));//未读数
			object.put("ISLOOK", tt.getIsSend());//1是2否
			if(i==9){
				i=t1doBase.getOStatus()==3?1:t1doBase.getOStatus();
			}
			if(i==1){
			  if(tt.getUserType()==3){					
				object.put("O_STATUS", "待接单");
			  }else{
				object.put("O_STATUS", "已送达");
			  }
			}
			object.put("USER_TYPE", tt.getUserType());
			String str1=HttpUtil.getParameter2(t1doBase.getShowId(), loginName, trueName, object,t1doBase.getODescribe());	
		    result   =   HttpUtil.doPost1(url, str1);
		   // System.out.println(result);
		    //new T1doTemp().setBASE(result).setID(IDUtil.getUid1()).save();
		    //System.out.println(1);
		}
		if(i==1){
			object.put("O_STATUS", "已送达");
		}
		List<T1doFw> list=T1doFw.dao.find("SELECT a.*,b.isSend FROM t_1do_fw a LEFT JOIN t_1do_fwpstatus b on a.SHOW_ID=b.SHOW_ID and a.icallshowid=b.O_USER where a.type=1");
		for (T1doFw t1doFw : list) {
			String loginName=t1doFw.getIcallshowid();
			String trueName=t1doFw.getOUserName();
			object.put("USER_TYPE", 6);
			object.put("ISLOOK", t1doFw.getIsSend());//1是2否
			if(i==7){
				object.put("ISLOOK", 1);//1是2否
			}
			String att="select count(*)  from t_1do_fwpstatus where isSend=2 and O_USER='"+loginName+"' GROUP BY O_USER";
			Record r2=Db.findFirst(att);
			object.put("UNREAD", r2.getInt("num"));//未读数
			String str2=HttpUtil.getParameter2(t1doBase.getShowId(), loginName, trueName, object,t1doBase.getODescribe());				
		    result   =   HttpUtil.doPost1(url, str2);
		  
		}
		return result;
		

	}
	//单独发送通知
	public static String sendOneIdo(T1doBase t1doBase,int i,String loginName,String trueName){ //i 1加入2查看3反馈
		//T1doType t1doType=t1doBase.getT1doType();
		T1doPstatus user=T1doPstatus.getUser(t1doBase.getShowId(),loginName);
		T1doFw fw=T1doFw.getfw(loginName);
		//T1doStatus ts=t1doBase.getIdoStatus();			
		//T1doFeedback tf=T1doFeedback.getT1doFeedback(6,t1doBase.getShowId());//查询是否评价
		String result = null;
		//int[] base=t1doBase.num();//0催办数1查看数2反馈数		
			JSONObject object = new JSONObject();
			//object.put("O_TITLE", "1do");
			object.put("SHOW_ID", t1doBase.getShowId());
			object.put("O_DESCRIBE", t1doBase.getODescribe());
			if(t1doBase.getOStatus()==3){
				if(i==2&&fw!=null){
					object.put("O_STATUS", "已送达");
				}else if(i==1&&user.getUserType()==1){
					object.put("O_STATUS", "已送达");
				}else{
					object.put("O_STATUS", "待接单");
				}
			}else if(t1doBase.getOStatus()==4){
				object.put("O_STATUS", "已接单");
			}else{
				 object.put("O_STATUS", "已完成");
			}
		    if(t1doBase.getOIsDeleted()==2){
		    	object.put("O_STATUS", "已删除");
		    }
			/*object.put("LOOKNUM", base[1]);//查看数量
			object.put("FBNUM", base[2]);//反馈数量	
			object.put("LIGHTNING", base[0]);*/
			object.put("LOOKNUM", t1doBase.getLOOKNUM());//查看数量
			object.put("FBNUM", t1doBase.getFBNUM());//反馈数量	
			object.put("LIGHTNING", t1doBase.getLIGHTNING());
			if(i==1){
				object.put("ISLOOK", 2);//1是2否
			}else{
				object.put("ISLOOK", 1);//1是2否

			}
			String att="select count(*) num from t_1do_base b, (select * from t_1do_pstatus where USER_TYPE!=2 and isDelete=1 and isSend=2 and O_USER='"+loginName+"' GROUP BY SHOW_ID)f where "
					+ "b.SHOW_ID=f.SHOW_ID and (O_EXECUTOR like CONCAT('%','"+loginName+"','%') or O_CUSTOMER like CONCAT('%','"+loginName+"','%') ) ";
			Record r2=Db.findFirst(att);
			object.put("UNREAD", r2.getInt("num"));//未读数
			object.put("SEND_TIME", t1doBase.getSendTime());
			object.put("O_CUSTOMER_NAME", t1doBase.getOCustomerName());
			object.put("O_CUSTOMER", t1doBase.getOCustomer());
			object.put("O_EXECUTOR", t1doBase.getOExecutor());
			object.put("O_EXECUTOR_NAME", t1doBase.getOExecutorName());
			object.put("AT", t1doBase.getAT());

		//	object.put("evaluation", tf==null?"2":"1");//是否评价1评价2不评价
			//object.put("O_TYPE_NAME", "综合需求");
			object.put("USER_TYPE", user==null?6:user.getUserType());	
			object.put("O_CREATE_TIME",t1doBase.getOCreateTime());
			object.put("O_FINISH_TIME",t1doBase.getOFinishTime());
			//T1doFeedback t=T1doFeedback.getT1doFeedback(5, t1doBase.getShowId());
			//object.put("Real_FINISH_TIME",t==null?"":t.getFbTime());
			object.put("Real_FINISH_TIME",t1doBase.getRealFinishTime()==null?"":t1doBase.getRealFinishTime());
			object.put("DELETE_TIME",t1doBase.getDeleteTime()==null?"":t1doBase.getDeleteTime());
			String str1=HttpUtil.getParameter2(t1doBase.getShowId(), loginName, trueName, object,t1doBase.getODescribe());				
			result   =   HttpUtil.doPost1(url, str1);
			//new T1doTemp().setBASE(result).setID(IDUtil.getUid1()).setPid(tt.getID()).save();			   
		    return result; 
		 
		
	}
	//整理层单独发送通知
	public static String fwsendOneIdo(T1doBase t1doBase,int i,String loginName,String trueName){ //i 1加入2查看3反馈
		//T1doStatus ts=t1doBase.getIdoStatus();			
		//T1doFeedback tf=T1doFeedback.getT1doFeedback(6,t1doBase.getShowId());//查询是否评价
		String result = null;
		int[] base=t1doBase.num();//0催办数1查看数2反馈数		
		JSONObject object = new JSONObject();
		//object.put("O_TITLE", "1do");
		object.put("SHOW_ID", t1doBase.getShowId());
		object.put("O_DESCRIBE", t1doBase.getODescribe());
		if(t1doBase.getOStatus()==3){
			object.put("O_STATUS", "已送达");
		}else if(t1doBase.getOStatus()==4){
			object.put("O_STATUS", "已接单");
		}else{
			object.put("O_STATUS", "已完成");
		}
		if(t1doBase.getOIsDeleted()==2){
	    	object.put("O_STATUS", "已删除");
	    }
		object.put("LOOKNUM", base[1]);//查看数量
		object.put("FBNUM", base[2]);//反馈数量	
		object.put("LIGHTNING", base[0]);
		if(i==1){
			object.put("ISLOOK", 2);//1是2否
		}else{
			object.put("ISLOOK", 1);//1是2否
			
		}
		String att="select count(*)  from t_1do_fwpstatus where isSend=2 and O_USER='"+loginName+"' GROUP BY O_USER";
		Record r2=Db.findFirst(att);
		object.put("UNREAD", r2.getInt("num"));//未读数
		object.put("SEND_TIME", t1doBase.getSendTime());
		object.put("O_CUSTOMER_NAME", t1doBase.getOCustomerName());
		object.put("O_CUSTOMER", t1doBase.getOCustomer());
		object.put("O_EXECUTOR", t1doBase.getOExecutor());
		object.put("O_EXECUTOR_NAME", t1doBase.getOExecutorName());
		object.put("AT", t1doBase.getAT());

		//object.put("evaluation", tf==null?"2":"1");//是否评价1评价2不评价
		//object.put("O_TYPE_NAME", "综合需求");
		object.put("USER_TYPE", 6);		
		object.put("O_CREATE_TIME",t1doBase.getOCreateTime());
		object.put("O_FINISH_TIME",t1doBase.getOFinishTime());
		//T1doFeedback t=T1doFeedback.getT1doFeedback(5, t1doBase.getShowId());
		//object.put("Real_FINISH_TIME",t==null?"":t.getFbTime());
		object.put("Real_FINISH_TIME",t1doBase.getRealFinishTime()==null?"":t1doBase.getRealFinishTime());
		object.put("DELETE_TIME",t1doBase.getDeleteTime()==null?"":t1doBase.getDeleteTime());
		String str1=HttpUtil.getParameter2(t1doBase.getShowId(), loginName, trueName, object,t1doBase.getODescribe());				
		result   =   HttpUtil.doPost1(url, str1);
		//new T1doTemp().setBASE(result).setID(IDUtil.getUid1()).setPid(tt.getID()).save();			   
		return result;
		
		
	}
	/*
	 三实库审批
	*/
	public static void ssk(T1doBase t1doBase,String content) {
		if(t1doBase.getSOURCE()==3&&t1doBase.getCPARAMETER()==1&&!t1doBase.getISAPPROVAL()){
			
			Approval arr=Approval.dao.findFirst("select * from approval where source=3 and name=?",content);
			
			if(arr!=null){
				JSONObject json=new JSONObject();
				json.put("id", t1doBase.getAPARAMETER());
				json.put("type", arr.getType());
				JSONObject result1 = HttpUtil.doPost3("http://59.202.68.28:8080/ssk/qs/approval",json.toString());
				
				if(result1.getInteger("code")==200){
					t1doBase.setCPARAMETER(arr.getType()).setISAPPROVAL(true).update();
				}
				
			}else{
				System.out.println("不审批");
			}
			
		}
	}
	
	//审批主动办
	public static void approval(T1doBase t1doBase,String content){
		if(t1doBase.getSOURCE()==2&&t1doBase.getDPARAMETER()==2&&t1doBase.getCPARAMETER()==2&&!t1doBase.getISAPPROVAL()){
			
			Approval arr=Approval.dao.findFirst("select * from approval where source=2 and name=?",content);
			if(arr!=null){
				if(arr.getType()==1){
					String result1 = null;
					
					try {
						System.out.println("http://172.16.8.18:8080/1call/getSchemeStart?id="+t1doBase.getAPARAMETER()+"&schemeStart=3&examineTime="+TimeUtil.getDateTime1());
						result1 = HttpUtil.doPost11("http://172.16.8.18:8080/1call/getSchemeStart?id="+t1doBase.getAPARAMETER()+"&schemeStart=3&examineTime="+TimeUtil.getDateTime1());
						
					} catch (UnsupportedEncodingException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					System.out.println("------------"+result1);
					
					
					JSONObject json=JSON.parseObject(result1);
					System.out.println("json-----"+json.toString());
					if(json.getInteger("code")==200){
						t1doBase.setCPARAMETER(3).setISAPPROVAL(true).update();
					}
				}else{
					t1doBase.setISAPPROVAL(true).update();
				}
			}else{
				System.out.println("不审批");
			}
			
		}
	}
}
