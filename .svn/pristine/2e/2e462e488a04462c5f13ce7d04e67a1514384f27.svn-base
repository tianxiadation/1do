package com.luqi.common.model;

import java.util.ArrayList;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.luqi.common.model.base.BaseTRegUser;
import com.luqi.util.HttpUtil;
import com.luqi.util.JsonUtil;
import com.luqi.util.UrlUtil;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class TRegUser extends BaseTRegUser<TRegUser> {
	public static final TRegUser dao = new TRegUser().dao();
	static String sql="SELECT SHOW_ID ,LAST_LOGIN_TOKEN ,C_SHOW_ID,U_LOGIN_NAME,U_TRUE_NAME,POWER,LAST_UPDATE_TIME,YSCG_POWER,IS_DELETED,LOGIN_JSON FROM t_reg_user  where SHOW_ID=? or U_MAIL=? or U_LOGIN_NAME=? or U_MOBILE=?";
	/*
	 2018年11月28日 coco 注解：获得用户
	*/
	public static JSONObject getUser(JSONObject json) {
		return getUserForShowId(json.getString("useraccount"));
	}
	/*
	 2018年11月28日 coco 注解：判断用户是否存在
	 */
	public static Boolean getUser1(String useraccount) {
		
		return Db.findFirst("SELECT SHOW_ID ,LAST_LOGIN_TOKEN ,C_SHOW_ID,U_LOGIN_NAME,U_TRUE_NAME,POWER FROM t_reg_user  where "
				+ "U_MAIL=? or U_LOGIN_NAME=?",useraccount,useraccount)==null;		
		
	}
	/*
	 2018年11月28日 coco 注解：更加showid等获得用户
	*/
	public static JSONObject getUserForShowId(String showid) {
		JSONObject json=new JSONObject();
		Record r= Db.findFirst(sql,showid,showid,showid,showid);		
		if(r!=null){
			if(r.getStr("LOGIN_JSON")!=null) {
				return JSON.parseObject(r.getStr("LOGIN_JSON"));
			}
			List<TRegCompanyDept> list =TRegCompanyDept.dao.find("select b.SHOW_ID,b.D_NAME from t_reg_user_dept a, t_reg_company_dept b where a.U_DEPT_ID=b.SHOW_ID and a.U_NAME=?",r.getStr("SHOW_ID"));
			List<String> lists=new ArrayList<String>();
			List<String> lists1=new ArrayList<String>();
			for (TRegCompanyDept t : list) {		
				lists.add(t.getShowId());		
				lists1.add(t.getDName());
			}
			json.put("U_DEPT_ID", lists);
			json.put("D_NAME", lists1);
			json.put("loginName", r.getStr("SHOW_ID"));
			json.put("LoginToken", r.getStr("LAST_LOGIN_TOKEN"));
			json.put("cShowId", r.getStr("C_SHOW_ID"));
			json.put("LAST_UPDATE_TIME", r.getDate("LAST_UPDATE_TIME"));			
			json.put("username", r.getStr("U_TRUE_NAME"));
			json.put("useraccount", r.getStr("U_LOGIN_NAME"));
			json.put("POWER", r.getInt("POWER"));
			json.put("YSCG_POWER", r.getInt("YSCG_POWER"));
			json.put("IS_DELETED", r.getInt("IS_DELETED"));
			Db.update("update t_reg_user set LOGIN_JSON=?  where U_MAIL=? or U_LOGIN_NAME=? or U_MOBILE=?",json.toString(),json.getString("useraccount"),json.getString("useraccount"),json.getString("useraccount"));
			return json;
		}
		
		return null;
	}
	/*
	 2018年11月28日 coco 注解：保存用户
	*/
	public static void saveUser(JSONObject json2) {
		new TRegUser().setShowId(json2.getString("loginName")).setULoginName(json2.getString("useraccount")).setCShowId(json2.getString("cShowId")).setUTrueName(json2.getString("username"))
		.setLastLoginToken(json2.getString("LoginToken")).setUName(json2.getString("loginName")).save();
		@SuppressWarnings("unchecked")
		List<String> arr=(List<String>) json2.get("D_NAME");
		@SuppressWarnings("unchecked")
		List<String> arr1=(List<String>) json2.get("U_DEPT_ID");
		for (int i = 0; i < arr1.size(); i++) {
			new TRegUserDept().setUName(json2.getString("loginName")).setUDeptId(arr1.get(i)).setCShowId("b5WJZ1bRLDCb7x2B").save();
			Record r=Db.findFirst("select * from t_reg_company_dept where show_id=?",arr1.get(i));
			if(r==null){
				new TRegCompanyDept().setShowId(arr1.get(i)).setDName(arr.get(i)).save();
			}
			
		}
		
	}
	
	/**   
	　* 描述：   获得该用户是否是整理层t_1do_fw表弃用改用t_reg_user表
	　* 创建人：coco   
	　* 创建时间：2019年7月30日 上午9:55:53         
	*/
	public static boolean getFlag(String useraccount) {
		return dao.findFirst("select * from t_reg_user where U_LOGIN_NAME=? and POWER=1",useraccount)!=null;
	}
	
	
	/**   
	 * 描述：   获得该用户是否是整理层t_1do_fw表弃用改用t_reg_user表
	 * 创建人：coco   
	 * 创建时间：2019年7月30日 上午9:55:53         
	 */
	public static void addUser(String useraccount) {
		JSONObject json=new JSONObject();
		json.put("useraccount", useraccount);
		JSONObject result=TRegUser.getUser(json);
		if(result==null){
		    result=HttpUtil.loginIm(useraccount);
			System.out.println(result);
			
				String str=HttpUtil.getParameter1(result, "/Base-Module/CompanyUser/GetUser",result.getString("loginName"));			
				JSONObject json3= HttpUtil.doPost2(UrlUtil.getUser, str);//http://172.16.8.7:6002
				System.out.println(json3);
				result.put("D_NAME", json3.getJSONObject("user").get("deptName"));
				result.put("U_DEPT_ID", json3.getJSONObject("user").get("deptId"));				
				result.put("POWER", 3);
				TRegUser.saveUser(result);
			
		}
	}

	/**
	 * 根据登陆账号（统一用户账号）查询用户
	 * @param account
	 * @return
	 */
	public static TRegUser getUserByLoginName(String account) {
		String sql = "SELECT * FROM t_reg_user WHERE U_LOGIN_NAME = ?";
		return dao.findFirst(sql, account);
	}
	
	
}
