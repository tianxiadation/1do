package com.demo.common.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.demo.common.model.base.BaseT1doFeedback;
import com.demo.util.StrUtil;
import com.jfinal.plugin.activerecord.Db;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class T1doFeedback extends BaseT1doFeedback<T1doFeedback>  {
	public static final T1doFeedback dao = new T1doFeedback().dao();
	
	/*
	 2018年6月25日下午9:11:15 方升群
	*/
	public T1doSet getIdoSet() {
		return T1doSet.dao.findFirst("select * from t_1do_set where SHOW_ID=? and EVENT_TYPE like ?",getShowId(), "%"+getFbType()+"%");
	}
	/*
	 2018年6月25日下午9:16:58 方升群
	*/
	public T1doPset getIdoPset() {
		return T1doPset.dao.findFirst("select * from t_1do_pset where SHOW_ID=? and O_USER=? and EVENT_TYPE like ?",getShowId(),getOUser(),"%"+getFbType()+"%");
	}
	/*
	 2018年6月25日下午9:11:15 方升群  //查询是否该工单不可以反馈
	 */
	public T1doSet getIdoSet1() {
		return T1doSet.dao.findFirst("select * from t_1do_set where SHOW_ID=? and EVENT_TYPE like '%3%'",getShowId());
	}
	/*
	 2018年6月25日下午9:16:58 方升群   //查询是否该用户对该工单不可以反馈
	 */
	public T1doPset getIdoPset1() {
		return T1doPset.dao.findFirst("select * from t_1do_pset where SHOW_ID=? and O_USER=? and EVENT_TYPE like '%3%'",getShowId(),getOUser());
	}
	/*
	 2018年6月26日下午2:32:54 方升群  //根据反馈获得attr
	*/
	public T1doAttr getIdoAttr() {
		return new T1doAttr().setShowId(getShowId()).setUploadUser(getOUser()).setUploadUserName(getOUserName()).setUploadTime(getFbTime())
				.setIsFb(2);
	}
	/*
	 2018年6月26日下午3:15:41 方升群   //获得日志getIdoStatus
	*/
	public T1doLog getIdoLog() {
		return new T1doLog().setShowId(getShowId()).setOUser( getOUser()).setOUserName( getOUserName())
				.setOpTime( getFbTime()).setLogType( getFbType()).setLog( getOUserName()+ getFBCONTENT());
	}
	/*
	 2018年6月26日下午3:15:41 方升群   //获得日志
	 */
	public T1doLog getLog() {
		return T1doLog.dao.findFirst("");
	}
	/*public T1doStatus getIdoStatus(){
		return T1doStatus.dao.findFirst("select * from t_1do_status where SHOW_ID=?", getShowId());
	}*/
	public T1doBase getT1doBase() {
		// TODO Auto-generated method stub
		return T1doBase.dao.findFirst("select * from t_1do_base where SHOW_ID=?", getShowId());
	}
	/*
	 2018年8月10日上午10:29:33 方升群  //查询是否进行过评价反馈//或者其他反馈类型标签   1，正常反馈；2，回复反馈；3，附件反馈  4，催办反馈，5，办结反馈；6，评价反馈，
	*/
	public static T1doFeedback getT1doFeedback(int i ,String showid) {
		return T1doFeedback.dao.findFirst("select * from t_1do_feedback where FB_TYPE=? and SHOW_ID=?",i,showid);

	}
	/*
	 2018年8月16日上午11:47:26 方升群 //反馈数量
	*/
	public static int getNum(String showid) {
	    return Db.findFirst("select  count(*) num from t_1do_feedback where SHOW_ID=? and FB_TYPE!=4  and isoverdue=1",showid).getInt("num");
	}
	/*
	 2018年8月16日上午11:47:26 方升群 //催办
	*/
	public static List<T1doFeedback> getFb(String showid) {
	    return dao.find("select * from t_1do_feedback where SHOW_ID=? and FB_TYPE=4  and isoverdue=1",showid);
	}
	/*
	 2018年10月31日 coco 注解：获得附件
	*/
	public static List<T1doFeedback> getAttr(String showid) {
		return T1doFeedback.dao.find("select * from t_1do_feedback where (FB_TYPE=3 or FB_TYPE=9) and SHOW_ID=?",showid);

	}
	public static List<T1doFeedback> getFb(String showId, Date realFinishTime) {
		
		 return dao.find("select * from t_1do_feedback where SHOW_ID=? and FB_TIME<? and FB_TYPE=4  and isoverdue=1",showId,realFinishTime);

	}

	/**
	 * 根据id获取
	 * @param id
	 * @return
	 */
	public static T1doFeedback getInstanceById(int id) {
		String sql = "SELECT f.*,b.`O_TITLE` title,u.`U_LOGIN_NAME` userName FROM `t_1do_feedback` f, `t_1do_base` b," +
				" `t_reg_user` u WHERE f.ID = ? AND f.`SHOW_ID` = b.`SHOW_ID` AND f.`O_USER` = u.`SHOW_ID`";
		return dao.findFirst(sql, id);
	}
	public List<String> getATString() {
		List<String> list=new ArrayList<String>();
		if(StrUtil.isNotEmpty(this.getAT())) {
			JSONArray arr=JSON.parseArray(this.getAT());
			for (int i = 0; i < arr.size(); i++) {
				String str=(String) arr.get(i);
				list.add(str.split("@")[0]);
			}
		}
		return list;
	}
	/**   
	　* 描述：   查询参与人是否反馈过
	　* 创建人：coco   
	　* 创建时间：2019年11月20日 下午5:31:23         
	*/
	public static boolean getExecutorFeedback(String SHOW_ID) {
		return dao.findFirst("select * from t_1do_feedback a,t_1do_pstatus b where "
				+ "a.SHOW_ID=b.SHOW_ID and a.O_USER=b.O_USER and b.USER_TYPE=3 and a.SHOW_ID=?",SHOW_ID)!=null;
	}
	//设置状态为办结的反馈（FB_TYPE=5）数据过期
	public static void updateIsoverdueByTypeIsFive(String showId) {
		Db.update("update t_1do_feedback set isoverdue=2 where FB_TYPE=5 and SHOW_ID=?",showId);
		Db.update("update t_1do_feedback set isoverdue=2 where SHOW_ID=?",showId);
	}
	//设置所以反馈数据过期
	public static void updateIsoverdue(String showId) {
		Db.update("update t_1do_feedback set isoverdue=2 where FB_TYPE=5 and SHOW_ID=?",showId);
		Db.update("update t_1do_feedback set isoverdue=2 where SHOW_ID=?",showId);
	}
	/**   
	　* 描述：   获得百姓爆料处理人发的附件反馈
	　* 创建人：coco   
	　* 创建时间：2020年7月21日 上午10:03:58         
	*/
	public static List<T1doFeedback> getExecutorFeedbacks(String showId) {
		return dao.find("select * from  t_1do_feedback where SHOW_ID=? and O_USER!='1G983BNW5WUjPvN9' and FB_TYPE=3",showId);
	}
}
