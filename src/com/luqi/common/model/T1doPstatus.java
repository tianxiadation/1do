package com.luqi.common.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.cxy.commonenum.TopicEnum;
import com.cxy.service.MessageService;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.luqi.common.model.base.BaseT1doPstatus;
import com.luqi.timer.SendIdo;
import com.luqi.util.StrUtil;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class T1doPstatus extends BaseT1doPstatus<T1doPstatus> {
	public static final T1doPstatus dao = new T1doPstatus().dao();
	public List<T1doFeedback> getIdoFeedbacks44() {
		return T1doFeedback.dao.find("select  O_USER_NAME from t_1do_feedback where SHOW_ID=? and FB_TYPE=4",getShowId());
	}
	/*
	 2018年6月22日下午4:01:48 方升群
	*/
	public static void saveIdoPstatus(String showID,String...users) {
		int i=1;
		for(String user:users){
			String[] sonUsers=user.split(";");
				for(String sonUser:sonUsers){
					new T1doPstatus().setShowId(showID).setOUser(sonUser).setOStatus(i).setUserType(i).save();
					new T1doPset().setShowId(showID).setOUser(sonUser).setEventType("1;2;3;4;5;6;").setUserType(i).save();
				}
			i++;
		}
	}
	public static void saveIdoPstatus1(String showID,String[] users,String[] usernames) {//老
			for (int j = 0; j < users.length; j++) {
				if(StrUtil.isEmpty(users[j])){
					break;
				}
			String[] sonUsers=users[j].split(";");
			String[] sonUsernames=usernames[j].split(";");
			for (int i = 0; i < sonUsers.length; i++) {
				new T1doPstatus().setShowId(showID).setOUser(sonUsers[i]).setOUserName(sonUsernames[i]).setOStatus(j+1).setUserType(j+1).save();
				//new T1doPset().setShowId(showID).setOUser(sonUsers[i]).setEventType("1;2;3;4;5;6;").setUserType(j+1).save();
			}
			
		}
	}
	public static void saveIdoPstatus2(T1doBase t1doBase,int status) {//新
		String[] users={t1doBase.getOCustomer(),t1doBase.getCreateUser(),t1doBase.getOExecutor()};
		String[] usernames={t1doBase.getOCustomerName(),t1doBase.getCreateUserName(),t1doBase.getOExecutorName()};
		for (int j = 0; j < users.length; j++) {
			if(StrUtil.isEmpty(users[j])){
				break;
			}
			String[] sonUsers=StrUtil.twoClear(users[j].split(";"));
			String[] sonUsernames=StrUtil.twoClear(usernames[j].split(";"));
			for (int i = 0; i < sonUsers.length; i++) {
				//if(j==0&&i>0) {
					//发起人只有一位，传多位过来默认取第一位
					//continue;
				//}
				int k=2;//未读
				String str=sonUsers[i];
				if(t1doBase.getCreateUser().equals(str)){
					k=1;
				}
				new T1doPstatus().setShowId(t1doBase.getShowId()).setOUser(str).
				setOUserName(sonUsernames[i]).setOStatus(3).setUserType(j+1).setIsRead(k).
				setSTATUS("待接单").setISLOOK(k).setOriginal(1).save();//.setIsRead(j==0?1:2)
				//setSTATUS(j+1==1?"待接单":"待接单").setISLOOK(k).setOriginal(1).save();//.setIsRead(j==0?1:2)
				if(j==0&&StrUtil.isNotEmpty(t1doBase.getGROUPID())&&status==1){
					//调用kafka接口
					new Thread(new Runnable() {
						
						@Override
						public void run() {
							
							Map<String,Object> map=new HashMap<String,Object>();
							map.put("groupId", t1doBase.getGROUPID());
							map.put("userId", str);
							map.put("showId", t1doBase.getShowId());
							MessageService.sendMsg(TopicEnum.DO, "doInfo", map);
							
						}
					}).start();
					
				}
			}
			
		}
	}
	
	
	/*
	 2018年8月9日上午11:15:06 方升群  //是否查看
	*/
	public int getIsLook() {
		Record r=Db.findFirst("select * from t_1do_log where SHOW_ID=? and O_USER=?",getShowId(),getOUser());
		return r==null?2:1;
	}
	/*
	 2018年8月10日上午9:46:00 方升群 //查询是否是参与人或发起人
	*/
	public static T1doPstatus getCustomerOrExecutor(String showid,String loginName,int i) {
		return T1doPstatus.dao.findFirst("select * from t_1do_pstatus where SHOW_ID=? and O_USER =? and USER_TYPE=?",showid,loginName,i);
	}
	//查询用户角色
	public static T1doPstatus getUser(String showid,String loginName) {
		return T1doPstatus.dao.findFirst("select * from t_1do_pstatus where SHOW_ID=? and O_USER =? and USER_TYPE!=2 and isDelete=1 order by USER_TYPE",showid,loginName);
	}                                    
	//查询用户
	public static List<T1doPstatus> getUser(String showid) {
		String str="select * from t_1do_pstatus where SHOW_ID=? and USER_TYPE!=2 and isDelete=1 GROUP BY O_USER";
		return T1doPstatus.dao.find(str,showid);
	}
	//修改人员工单状态
	public static void setStatus(int O_STATUS, String STATUS, String showId) {
		Db.update("update t_1do_pstatus set O_STATUS=?,STATUS=?  where SHOW_ID=? ",O_STATUS,STATUS,showId);
		Db.update("update t_1do_pstatus set isRead=2 where SHOW_ID=? and (online=2 or gmt_modified<CURDATE())",showId);
		Db.update("update t_1do_fwpstatus set isRead=2 where SHOW_ID=? and (online=2 or gmt_modified<CURDATE())",showId);
		//Db.update("update t_1do_pstatus set isRead=2 where SHOW_ID=? and O_USER=? and isDelete=1 and USER_TYPE!=2 and (online=2 or gmt_modified<CURDATE())",t1doBase.getShowId(),user.getString("loginName"));
		//Db.update("update t_1do_fwpstatus set isRead=2 where SHOW_ID=? and O_USER=? and (online=2 or gmt_modified<CURDATE())",t1doBase.getShowId(),user.getString("loginName"));
	}                                   
	
	//根据用户角色查询用户
		public static List<T1doPstatus> getUserByType(String showid,int type) {
			String str="select * from t_1do_pstatus where SHOW_ID=? and USER_TYPE=? and isDelete=1 GROUP BY O_USER";
			return T1doPstatus.dao.find(str,showid,type);
		}
}
